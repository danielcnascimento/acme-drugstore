[{"D:\\projetos\\www\\acme-drugstore\\src\\App.js":"1","D:\\projetos\\www\\acme-drugstore\\src\\theme.js":"2","d:\\projetos\\www\\acme-drugstore\\src\\index.js":"3","d:\\projetos\\www\\acme-drugstore\\src\\App.js":"4","d:\\projetos\\www\\acme-drugstore\\src\\theme.js":"5","d:\\projetos\\www\\acme-drugstore\\src\\pages\\landing\\style.js":"6","d:\\projetos\\www\\acme-drugstore\\src\\pages\\landing\\Landing.js":"7","d:\\projetos\\www\\acme-drugstore\\src\\pages\\auth\\Auth.js":"8","D:\\Projetos\\www\\acme-drugstore\\src\\index.js":"9","D:\\Projetos\\www\\acme-drugstore\\src\\theme.js":"10","D:\\Projetos\\www\\acme-drugstore\\src\\pages\\auth\\Auth.js":"11","D:\\Projetos\\www\\acme-drugstore\\src\\pages\\auth\\style.js":"12","D:\\Projetos\\www\\acme-drugstore\\src\\services\\api.js":"13","D:\\Projetos\\www\\acme-drugstore\\src\\pages\\landing\\style.js":"14","D:\\Projetos\\www\\acme-drugstore\\src\\pages\\landing\\Landing.js":"15","D:\\Projetos\\www\\acme-drugstore\\src\\App.js":"16","D:\\Projetos\\www\\acme-drugstore\\src\\Routes.js":"17","D:\\Projetos\\www\\acme-drugstore\\src\\services\\PrivateRoute.js":"18","D:\\Projetos\\www\\acme-drugstore\\src\\pages\\medications\\Medications.js":"19","D:\\Projetos\\www\\acme-drugstore\\src\\utils\\Dialog.js":"20","D:\\Projetos\\www\\acme-drugstore\\src\\components\\drugs-data\\DrugsData.js":"21","D:\\Projetos\\www\\acme-drugstore\\src\\components\\drugs-data\\DrugsTable.js":"22"},{"size":371,"mtime":1611601837599,"results":"23","hashOfConfig":"24"},{"size":318,"mtime":1611601972702,"results":"25","hashOfConfig":"24"},{"size":221,"mtime":1611595946915,"results":"26","hashOfConfig":"27"},{"size":278,"mtime":1611603915748,"results":"28","hashOfConfig":"27"},{"size":355,"mtime":1611605527957,"results":"29","hashOfConfig":"27"},{"size":854,"mtime":1611610876985,"results":"30","hashOfConfig":"27"},{"size":2088,"mtime":1611612486247,"results":"31","hashOfConfig":"27"},{"size":2040,"mtime":1611613284376,"results":"32","hashOfConfig":"27"},{"size":221,"mtime":1611595946915,"results":"33","hashOfConfig":"34"},{"size":452,"mtime":1611691842451,"results":"35","hashOfConfig":"34"},{"size":2809,"mtime":1611848393690,"results":"36","hashOfConfig":"34"},{"size":1098,"mtime":1611771034204,"results":"37","hashOfConfig":"34"},{"size":159,"mtime":1611757742528,"results":"38","hashOfConfig":"34"},{"size":1273,"mtime":1611693667712,"results":"39","hashOfConfig":"34"},{"size":2723,"mtime":1611695362309,"results":"40","hashOfConfig":"34"},{"size":264,"mtime":1611693062925,"results":"41","hashOfConfig":"34"},{"size":531,"mtime":1611693113773,"results":"42","hashOfConfig":"34"},{"size":275,"mtime":1611693154447,"results":"43","hashOfConfig":"34"},{"size":2028,"mtime":1611919455297,"results":"44","hashOfConfig":"34"},{"size":1545,"mtime":1611848300631,"results":"45","hashOfConfig":"34"},{"size":4052,"mtime":1611869640486,"results":"46","hashOfConfig":"34"},{"size":2593,"mtime":1611880866388,"results":"47","hashOfConfig":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1ahtwl6",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"7muwhf",{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"1f5wy5y",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"72"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},"D:\\projetos\\www\\acme-drugstore\\src\\App.js",["101"],"D:\\projetos\\www\\acme-drugstore\\src\\theme.js",[],"d:\\projetos\\www\\acme-drugstore\\src\\index.js",[],"d:\\projetos\\www\\acme-drugstore\\src\\App.js",[],"d:\\projetos\\www\\acme-drugstore\\src\\theme.js",[],"d:\\projetos\\www\\acme-drugstore\\src\\pages\\landing\\style.js",[],"d:\\projetos\\www\\acme-drugstore\\src\\pages\\landing\\Landing.js",["102"],"d:\\projetos\\www\\acme-drugstore\\src\\pages\\auth\\Auth.js",["103"],"D:\\Projetos\\www\\acme-drugstore\\src\\index.js",[],["104","105"],"D:\\Projetos\\www\\acme-drugstore\\src\\theme.js",[],"D:\\Projetos\\www\\acme-drugstore\\src\\pages\\auth\\Auth.js",["106"],"import React, { useState } from \"react\";\r\nimport {\r\n  Box,\r\n  TextField,\r\n  Button,\r\n  Typography,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport { Info } from \"@material-ui/icons\";\r\nimport logoImg from \"../../assets/main-logo.png\";\r\nimport { useStyle } from \"./style\";\r\nimport api from \"../../services/api\";\r\nimport Dialog from \"../../utils/Dialog\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Auth = () => {\r\n  const classes = useStyle();\r\n  const history = useHistory();\r\n  const [open, setOpen] = useState(false);\r\n  //states para os campos.\r\n  const [email, setEmail] = useState(\"candidato@bluestorm.com.br\");\r\n  const [senha, setSenha] = useState(\"Bluestorm@123\");\r\n\r\n  //vai encaminhar os dados para autenticação.\r\n  async function handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    const data = {\r\n      username: email,\r\n      password: senha,\r\n    };\r\n\r\n    await api\r\n      .post(\"login\", data)\r\n      .then((res) => {\r\n        const { token } = res.data.data;\r\n        localStorage.setItem(\"acesso\", token);\r\n        console.log(res.data.data);\r\n        history.push(\"/drugs\");\r\n      })\r\n      .catch((err) => console.log(err.toJSON()));\r\n  }\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <img src={logoImg} className={classes.logo} />\r\n      <span className={classes.entrar}>Entrar</span>\r\n      <IconButton onClick={() => setOpen(true)}>\r\n        <Info color=\"primary\" />\r\n      </IconButton>\r\n      <form onSubmit={handleSubmit} className={classes.form_area}>\r\n        <Dialog open={open} setOpen={setOpen} />\r\n        <div className={classes.input_area}>\r\n          <TextField\r\n            name=\"email\"\r\n            className={classes.input}\r\n            type=\"email\"\r\n            required\r\n            label=\"email\"\r\n            variant=\"outlined\"\r\n            value={email}\r\n            onChange={(e) => {\r\n              setEmail(e.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n        <div className={classes.input_area}>\r\n          <TextField\r\n            name=\"senha\"\r\n            className={classes.input}\r\n            type=\"password\"\r\n            required\r\n            label=\"senha\"\r\n            variant=\"outlined\"\r\n            value={senha}\r\n            onChange={(e) => {\r\n              setSenha(e.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n        <div>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.sendBtn}\r\n            type=\"submit\"\r\n          >\r\n            <Typography\r\n              variant=\"h5\"\r\n              color=\"secondary\"\r\n              className={classes.btnTitle}\r\n            >\r\n              entrar\r\n            </Typography>\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n",["107","108"],"D:\\Projetos\\www\\acme-drugstore\\src\\pages\\auth\\style.js",[],"D:\\Projetos\\www\\acme-drugstore\\src\\services\\api.js",[],"D:\\Projetos\\www\\acme-drugstore\\src\\pages\\landing\\style.js",[],"D:\\Projetos\\www\\acme-drugstore\\src\\pages\\landing\\Landing.js",["109","110"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Typography,\r\n  Button,\r\n  Modal,\r\n  Fade,\r\n  Backdrop,\r\n  Container,\r\n  Grow,\r\n} from \"@material-ui/core\";\r\nimport { useStyle } from \"./style\";\r\nimport logoImg from \"../../assets/main-logo.png\";\r\nimport Auth from \"../auth/Auth\";\r\n\r\nconst Landing = () => {\r\n  const classes = useStyle();\r\n  const [open, setOpen] = useState(false);\r\n  const [checked, setChecked] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setChecked(true);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"root\">\r\n      <div className={classes.container}>\r\n        <Grow in={checked} {...(checked ? { timeout: 700 } : {})}>\r\n          <div>\r\n            <Typography\r\n              variant=\"h3\"\r\n              component=\"h3\"\r\n              color=\"textPrimary\"\r\n              className={classes.title}\r\n            >\r\n              Bem vindo a\r\n            </Typography>\r\n            <Typography\r\n              variant=\"h3\"\r\n              component=\"h3\"\r\n              color=\"secondary\"\r\n              className={classes.title}\r\n            >\r\n              DROGARIA\r\n            </Typography>\r\n          </div>\r\n        </Grow>\r\n        <Grow in={checked} {...(checked ? { timeout: 1000 } : {})}>\r\n          <div>\r\n            <img src={logoImg} className={classes.image} />\r\n\r\n            <div className={classes.btnContainer}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                className={classes.button}\r\n                onClick={() => setOpen(true)}\r\n              >\r\n                <Typography\r\n                  variant=\"h5\"\r\n                  color=\"primary\"\r\n                  className={classes.btnTitle}\r\n                >\r\n                  ENTRAR\r\n                </Typography>\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n              >\r\n                <Typography\r\n                  variant=\"h5\"\r\n                  color=\"secondary\"\r\n                  className={classes.btnTitle}\r\n                >\r\n                  NOVO USUÁRIO\r\n                </Typography>\r\n              </Button>\r\n            </div>\r\n\r\n            <Modal\r\n              className={classes.modalContainer}\r\n              open={open}\r\n              onClose={() => setOpen(false)}\r\n              BackdropComponent={Backdrop}\r\n              BackdropProps={{\r\n                timeout: 500,\r\n              }}\r\n            >\r\n              <Fade in={open}>\r\n                <Auth />\r\n              </Fade>\r\n            </Modal>\r\n          </div>\r\n        </Grow>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Landing;\r\n","D:\\Projetos\\www\\acme-drugstore\\src\\App.js",[],["111","112"],"D:\\Projetos\\www\\acme-drugstore\\src\\Routes.js",[],"D:\\Projetos\\www\\acme-drugstore\\src\\services\\PrivateRoute.js",[],["113","114"],"D:\\Projetos\\www\\acme-drugstore\\src\\pages\\medications\\Medications.js",[],"D:\\Projetos\\www\\acme-drugstore\\src\\utils\\Dialog.js",["115","116"],"import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nexport default function DraggableDialog(props) {\r\n  const { open, setOpen } = props;\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleCopy = () => {};\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"draggable-dialog-title\"\r\n      >\r\n        <DialogTitle>Testing Environment - Log in</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText color=\"textPrimary\">\r\n            YOU CAN GET STARTED WITH FOLLOWING ACCESS KEYS: ‏\r\n          </DialogContentText>\r\n          <DialogContentText>\r\n            email:candidato@bluestorm.com.br\r\n          </DialogContentText>\r\n          <DialogContentText>password:Bluestorm@123</DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button variant=\"outlined\" onClick={handleClose} color=\"textPrimary\">\r\n            ok\r\n          </Button>\r\n          <Button variant=\"outlined\" onClick={handleClose} color=\"textPrimary\">\r\n            Copy\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Projetos\\www\\acme-drugstore\\src\\components\\drugs-data\\DrugsData.js",["117"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n} from \"@material-ui/core\";\r\nimport api from \"../../services/api\";\r\n\r\nconst columns = [\r\n  { id: \"name\", label: \"Nome\", minWidth: 170 },\r\n  { id: \"dosage\", label: \"Dosagem\", minWidth: 100 },\r\n  {\r\n    id: \"type_description\",\r\n    label: \"Farmaceutico\",\r\n    minWidth: 170,\r\n    align: \"right\",\r\n  },\r\n  {\r\n    id: \"covarage\",\r\n    label: \"Tipo\",\r\n    minWidth: 170,\r\n    align: \"right\",\r\n  },\r\n  {\r\n    id: \"strengh_unit\",\r\n    label: \"Unidade/tipo\",\r\n    minWidth: 170,\r\n    align: \"right\",\r\n  },\r\n  {\r\n    id: \"strengh\",\r\n    label: \"Unidade/Qtd.\",\r\n    minWidth: 170,\r\n    align: \"right\",\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n    margin: \"auto\",\r\n  },\r\n  container: {\r\n    maxHeight: 600,\r\n  },\r\n});\r\n\r\nexport default function DrugsData({ fetchResult }) {\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [totalDrugs, setTotalDrugs] = React.useState(0);\r\n  const [totalPages, setTotalPages] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const [medications, setMedications] = React.useState([]);\r\n\r\n  // rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage);\r\n\r\n  React.useEffect(() => {\r\n    api\r\n      .get(`drugs?name=${fetchResult}&limit=${rowsPerPage}&page=${page + 1}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"acesso\")}`,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        setMedications(res.data.data);\r\n        setTotalDrugs(res.data.total);\r\n        setTotalPages(res.data.last_page);\r\n      })\r\n      .catch((err) => console.log(err.toJSON()));\r\n  }, [rowsPerPage, page, fetchResult]);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  console.log(totalDrugs);\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    //setPage(1);\r\n  };\r\n  if (!medications.length) {\r\n    return <view />;\r\n  } else {\r\n    return (\r\n      <Paper className={classes.root}>\r\n        <TableContainer className={classes.container}>\r\n          <Table stickyHeader aria-label=\"sticky table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map((column) => (\r\n                  <TableCell\r\n                    key={column.id}\r\n                    align=\"right\"\r\n                    style={{ minWidth: 170 }}\r\n                  >\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {medications //rows\r\n\r\n                .map((row) => {\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      role=\"checkbox\"\r\n                      tabIndex={-1}\r\n                      key={row.gpi14}\r\n                    >\r\n                      <TableCell align=\"right\">{row.name}</TableCell>\r\n                      <TableCell align=\"right\">{row.dosage}</TableCell>\r\n                      <TableCell align=\"right\">\r\n                        {row.type_description}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{row.coverage}</TableCell>\r\n                      <TableCell align=\"right\">{row.strength_unit}</TableCell>\r\n                      <TableCell align=\"right\">{row.strength}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 20]}\r\n          component=\"div\"\r\n          count={totalDrugs}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n","D:\\Projetos\\www\\acme-drugstore\\src\\components\\drugs-data\\DrugsTable.js",["118"],"import React, { useRef } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\nimport api from \"../../services/api\";\r\n\r\nconst columns = [\r\n  { field: \"col1\", headerName: \"Nome\", width: 170 },\r\n  { field: \"col2\", headerName: \"Dosagem\", width: 170 },\r\n  {\r\n    field: \"col3\",\r\n    headerName: \"Farmaceutico\",\r\n    minWidth: 170,\r\n    align: \"right\",\r\n  },\r\n  {\r\n    field: \"col4\",\r\n    headerName: \"Tipo\",\r\n    width: 170,\r\n    align: \"right\",\r\n  },\r\n  {\r\n    field: \"col5\",\r\n    headerName: \"Unidade/tipo\",\r\n    width: 170,\r\n    align: \"right\",\r\n  },\r\n  {\r\n    field: \"col6\",\r\n    headerName: \"Unidade/Qtd.\",\r\n    width: 170,\r\n    align: \"right\",\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n    margin: \"auto\",\r\n  },\r\n  container: {\r\n    maxHeight: 600,\r\n  },\r\n});\r\n\r\nexport default function DrugsData({ fetchResult }) {\r\n  const ref = useRef();\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(1);\r\n  const [totalDrugs, setTotalDrugs] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(20);\r\n  const [medications, setMedications] = React.useState([]);\r\n  const [row, setRow] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    api\r\n      .get(`drugs?name=${fetchResult}&limit=${rowsPerPage}&page=${page}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"acesso\")}`,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        setMedications(res.data.data);\r\n        setTotalDrugs(res.data.total);\r\n      })\r\n      .catch((err) => console.log(err.toJSON()));\r\n  }, [rowsPerPage, page, fetchResult]);\r\n\r\n  React.useEffect(() => {\r\n    let row = medications.map((i, index) => {\r\n      return {\r\n        id: index,\r\n        col1: i.name,\r\n        col2: i.dosage,\r\n        col3: i.type_description,\r\n        col4: i.coverage,\r\n        col5: i.strength_unit,\r\n        col6: i.strength,\r\n      };\r\n    });\r\n\r\n    setRow(row);\r\n  }, [medications, page]);\r\n\r\n  console.log(row);\r\n\r\n  const handleChangePage = (newPage) => {\r\n    setPage(newPage.page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(event.pageSize);\r\n    //setPage(1);\r\n  };\r\n\r\n  return (\r\n    <DataGrid\r\n      ref={ref}\r\n      columns={columns}\r\n      rows={row}\r\n      rowsPerPageOptions={[5, 10, 20]}\r\n      rowCount={totalDrugs}\r\n      //rowsPerPage={rowsPerPage}\r\n      page={page}\r\n      pageSize={rowsPerPage}\r\n      onPageChange={handleChangePage}\r\n      onPageSizeChange={handleChangeRowsPerPage}\r\n    />\r\n  );\r\n}\r\n",{"ruleId":"119","severity":1,"message":"120","line":12,"column":9,"nodeType":"121","messageId":"122","endLine":12,"endColumn":16},{"ruleId":"123","severity":1,"message":"124","line":30,"column":9,"nodeType":"125","endLine":30,"endColumn":56},{"ruleId":"123","severity":1,"message":"124","line":58,"column":9,"nodeType":"125","endLine":58,"endColumn":55},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"123","severity":1,"message":"124","line":46,"column":7,"nodeType":"125","endLine":46,"endColumn":53},{"ruleId":"126","replacedBy":"130"},{"ruleId":"128","replacedBy":"131"},{"ruleId":"119","severity":1,"message":"132","line":8,"column":3,"nodeType":"121","messageId":"122","endLine":8,"endColumn":12},{"ruleId":"123","severity":1,"message":"124","line":49,"column":13,"nodeType":"125","endLine":49,"endColumn":60},{"ruleId":"126","replacedBy":"133"},{"ruleId":"128","replacedBy":"134"},{"ruleId":"126","replacedBy":"135"},{"ruleId":"128","replacedBy":"136"},{"ruleId":"119","severity":1,"message":"137","line":12,"column":9,"nodeType":"121","messageId":"122","endLine":12,"endColumn":24},{"ruleId":"119","severity":1,"message":"138","line":20,"column":9,"nodeType":"121","messageId":"122","endLine":20,"endColumn":19},{"ruleId":"119","severity":1,"message":"139","line":58,"column":10,"nodeType":"121","messageId":"122","endLine":58,"endColumn":20},{"ruleId":"119","severity":1,"message":"120","line":47,"column":9,"nodeType":"121","messageId":"122","endLine":47,"endColumn":16},"no-unused-vars","'classes' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["140"],"no-negated-in-lhs",["141"],["140"],["141"],"'Container' is defined but never used.",["140"],["141"],["140"],["141"],"'handleClickOpen' is assigned a value but never used.","'handleCopy' is assigned a value but never used.","'totalPages' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]